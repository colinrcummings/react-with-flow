{"version":3,"sources":["api.js","components/SelectionButton.js","components/SelectionItems.js","components/App.js","index.js"],"names":["api","get","group","Promise","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","resolve","reject","err","wrap","_context","prev","next","setTimeout","t0","abrupt","Error","concat","stop","this","_x","_x2","apply","arguments","SelectionButton","disabled","selection","currentSelection","handleClick","react","reactstrap_es","active","onClick","SelectionItems","items","map","d","key","App","state","fruits","vegitables","dairy","handleCurrentSelection","_this","setState","then","data","defineProperty","_this2","selectionItems","className","sm","style","marginBottom","components_SelectionButton","components_SelectionItems","React","root","document","getElementById","ReactDOM","render","react_default","createElement","components_App"],"mappings":"0RA4BeA,EA3BH,CACVC,IAAK,SAACC,GAAD,OACH,IAAIC,QAAJ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAA2B,SAAAC,EAAOC,EAASC,GAAhB,IAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACnBJ,EAAM,KADaE,EAAAE,KAAA,EAGnB,IAAId,QAAQ,SAAAQ,GAAO,OAAIO,WAAWP,EAAS,OAHxB,UAKpBE,EALoB,CAAAE,EAAAE,KAAA,SAAAF,EAAAI,GAMfjB,EANea,EAAAE,KAOhB,WAPgBF,EAAAI,GAAA,EAUhB,eAVgBJ,EAAAI,GAAA,EAahB,UAbgBJ,EAAAI,GAAA,yBAAAJ,EAAAK,OAAA,SAQZT,EAAQ,CAAC,QAAS,OAAQ,YARd,cAAAI,EAAAK,OAAA,SAWZT,EAAQ,CAAC,SAAU,UAAW,cAXlB,cAAAI,EAAAK,OAAA,SAcZT,EAAQ,CAAC,OAAQ,SAAU,YAdf,cAiBb,IAAIU,MAAJ,iBAAAC,OAA2BpB,EAA3B,MAjBa,QAAAa,EAAAE,KAAA,iBAoBvBL,EAAOS,MAAMR,IApBU,yBAAAE,EAAAQ,SAAAb,EAAAc,SAA3B,gBAAAC,EAAAC,GAAA,OAAAtB,EAAAuB,MAAAH,KAAAI,YAAA,MCuBWC,EAfS,SAAAzB,GAAA,IACtB0B,EADsB1B,EACtB0B,SACAC,EAFsB3B,EAEtB2B,UACAC,EAHsB5B,EAGtB4B,iBACAC,EAJsB7B,EAItB6B,YAJsB,OAMtBC,EAAA,cAACC,EAAA,EAAD,CACEL,SAAUA,EACVM,OAAQL,IAAcC,EACtBK,QAAS,kBAAMJ,EAAYF,KAE1BA,ICXUO,EARQ,SAAAlC,GAAA,IAAGmC,EAAHnC,EAAGmC,MAAH,OACrBL,EAAA,cAACA,EAAA,SAAD,KACGK,EAAMC,IAAI,SAAAC,GAAC,OACVP,EAAA,mBAAGQ,IAAKD,GAAIA,OC0EHE,6MA9DbC,MAAQ,CACNC,OAAQ,KACRC,WAAY,KACZC,MAAO,KACPf,iBAAkB,YAOpBgB,uBAAyB,SAAChB,GACnBiB,EAAKL,MAAMZ,GASdiB,EAAKC,SAAS,CACZlB,qBATFiB,EAAKC,SAAS,CAAElB,oBAAoB,kBAClChC,EAAIC,IAAI+B,GAAkBmB,KAAK,SAAAC,GAC7BH,EAAKC,SAAL7C,OAAAgD,EAAA,EAAAhD,CAAA,GACG2B,EAAmBoB,4FAR5B5B,KAAKwB,uBAAuBxB,KAAKoB,MAAMZ,mDAmBhC,IAAAsB,EAAA9B,KACCQ,EAAqBR,KAAKoB,MAA1BZ,iBACFuB,EAAiB/B,KAAKoB,MAAMZ,GAElC,OACEE,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,EAAD,CAAKqB,UAAU,eACbtB,EAAA,cAACC,EAAA,EAAD,CAAKsB,GAAG,MACNvB,EAAA,uCACAA,EAAA,yBACAA,EAAA,cAACC,EAAA,EAAD,CAAauB,MAAO,CAAEC,aAAc,KACjC,CAAC,SAAU,aAAc,SAASnB,IAAI,SAAAT,GAAS,OAC9CG,EAAA,cAAC0B,EAAD,CACE9B,UAAWyB,EACXb,IAAKX,EACLA,UAAWA,EACXC,iBAAkBA,EAClBC,YAAaqB,EAAKN,4BAIvBO,EACCrB,EAAA,cAAC2B,EAAD,CAAgBtB,MAAOgB,IAEvBrB,EAAA,mBAAGsB,UAAU,0BAAb,WACWxB,EADX,iBApDI8B,aCPZC,EAAiBC,SAASC,eAAe,QAEnC,MAARF,GACFG,IAASC,OAAOC,EAAA5D,EAAA6D,cAACC,EAAD,MAASP","file":"static/js/main.75ae723d.chunk.js","sourcesContent":["// @flow\nconst api = {\n  get: (group: string) =>\n    new Promise<Array<string>>(async (resolve, reject) => {\n      const err = null;\n\n      await new Promise(resolve => setTimeout(resolve, 300));\n\n      if (!err) {\n        switch (group) {\n          case 'fruits':\n            return resolve(['Apple', 'Pear', 'Orange']);\n\n          case 'vegitables':\n            return resolve(['Tomato', 'Lettuce', 'Broccoli']);\n\n          case 'dairy':\n            return resolve(['Milk', 'Cheese', 'Yogurt']);\n\n          default:\n            throw new Error(`Unknown group ${group}!`);\n        }\n      } else {\n        reject(Error(err));\n      }\n    })\n};\n\nexport default api;\n","// @flow\nimport * as React from 'react';\nimport { Button } from 'reactstrap';\n\ntype Props = {\n  disabled: boolean,\n  selection: string,\n  currentSelection: string,\n  handleClick: Function\n};\n\nconst SelectionButton = ({\n  disabled,\n  selection,\n  currentSelection,\n  handleClick\n}: Props) => (\n  <Button\n    disabled={disabled}\n    active={selection === currentSelection}\n    onClick={() => handleClick(selection)}\n  >\n    {selection}\n  </Button>\n);\n\nexport default SelectionButton;\n","// @flow\nimport * as React from 'react';\n\nconst SelectionItems = ({ items }: { items: Array<string> }) => (\n  <React.Fragment>\n    {items.map(d => (\n      <p key={d}>{d}</p>\n    ))}\n  </React.Fragment>\n);\n\nexport default SelectionItems;\n","// @flow\nimport * as React from 'react';\nimport { Container, Row, Col, ButtonGroup } from 'reactstrap';\n\nimport api from '../api';\nimport SelectionButton from './SelectionButton';\nimport SelectionItems from './SelectionItems';\n\ntype Props = {};\n\ntype State = {\n  fruits: ?Array<string>,\n  vegitables: ?Array<string>,\n  dairy: ?Array<string>,\n  currentSelection: string\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    fruits: null,\n    vegitables: null,\n    dairy: null,\n    currentSelection: 'fruits'\n  };\n\n  componentDidMount() {\n    this.handleCurrentSelection(this.state.currentSelection);\n  }\n\n  handleCurrentSelection = (currentSelection: string) => {\n    if (!this.state[currentSelection]) {\n      this.setState({ currentSelection }, () =>\n        api.get(currentSelection).then(data => {\n          this.setState({\n            [currentSelection]: data\n          });\n        })\n      );\n    } else {\n      this.setState({\n        currentSelection\n      });\n    }\n  };\n\n  render() {\n    const { currentSelection } = this.state;\n    const selectionItems = this.state[currentSelection];\n\n    return (\n      <Container>\n        <Row className=\"text-center\">\n          <Col sm=\"12\">\n            <h1>Food Groups</h1>\n            <hr />\n            <ButtonGroup style={{ marginBottom: 10 }}>\n              {['fruits', 'vegitables', 'dairy'].map(selection => (\n                <SelectionButton\n                  disabled={!selectionItems}\n                  key={selection}\n                  selection={selection}\n                  currentSelection={currentSelection}\n                  handleClick={this.handleCurrentSelection}\n                />\n              ))}\n            </ButtonGroup>\n            {selectionItems ? (\n              <SelectionItems items={selectionItems} />\n            ) : (\n              <p className=\"text-muted font-italic\">\n                Loading {currentSelection}...\n              </p>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// @flow\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './components/App';\n\nconst root: ?Element = document.getElementById('root');\n\nif (root != null) {\n  ReactDOM.render(<App />, root);\n}\n"],"sourceRoot":""}